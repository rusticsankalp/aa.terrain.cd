# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  if (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
    config.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=700,fmode=600"]
  else
    config.vm.synced_folder ".", "/vagrant"
  end
  public_key = File.read(".secrets/keys/cd_id_rsa.pub")
  private_key = File.read(".secrets/keys/cd_id_rsa")
  config.vm.box = "ubuntu/xenial64"
  config.disksize.size = '50GB'
  config.ssh.insert_key = false
  config.ssh.private_key_path = [".secrets/keys/cd_id_rsa",".secrets/keys/insecure_private_key"]
  config.vm.provision "file", source: ".secrets/keys/cd_id_rsa.pub", destination: "~/.ssh/id_rsa.pub"
  config.vm.provision "file", source: ".secrets/keys/cd_id_rsa", destination: "~/.ssh/id_rsa"
  config.vm.provision :shell, :inline =>"
      echo 'Authorizing custom public key ....'
      echo '#{public_key}' >>  ~/.ssh/authorized_keys
      #chmod 400 ~/.ssh/id_rsa
    ",privileged: false
  config.vm.provision :shell, :inline =>"
      echo 'Authorizing custom public key for root....'
      echo '#{public_key}' >>  /root/.ssh/authorized_keys
    ",privileged: true
  config.vm.define "cd" do |d|
    d.vm.hostname = "cd"
    d.vm.network "private_network", ip: "10.0.0.0"
    d.vm.provision :shell, path: "scripts/bootstrap_ansible.sh"
    d.vm.provision :shell, inline: "PYTHONUNBUFFERED=1 ansible-playbook /vagrant/ansible/cd.yml -c local"
    d.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.memory = 1024
      v.cpus = 1
    end
  end
  config.vm.define "dlowkeyvmaa" do |d|
    d.vm.hostname = "dlowkeyvmaa"
    d.vm.network "public_network"
    d.vm.provision :shell, path: "scripts/bootstrap_ansible.sh"
    d.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.memory = 8192 
      v.cpus = 6
    end
  end
  config.vm.define "dlowkeyvmab" do |d|
    d.vm.hostname = "dlowkeyvmaa"
    d.vm.network "public_network"
    d.vm.provision :shell, path: "scripts/bootstrap_ansible.sh"
    d.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.memory = 8192 
      v.cpus = 6
    end
  end
  config.vm.define "dlowkeyvmac" do |d|
    d.vm.hostname = "dlowkeyvmaa"
    d.vm.network "public_network"
    d.vm.provision :shell, path: "scripts/bootstrap_ansible.sh"
    d.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.memory = 8192 
      v.cpus = 6
    end
  end
  config.vm.define "dlowkeyvmad" do |d|
    d.vm.hostname = "dlowkeyvmaa"
    d.vm.network "public_network"
    d.vm.provision :shell, path: "scripts/bootstrap_ansible.sh"
    d.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.memory = 8192 
      v.cpus = 6
    end
  end
  config.vm.define "dlowkeyvmae" do |d|
    d.vm.hostname = "dlowkeyvmaa"
    d.vm.network "public_network"
    d.vm.provision :shell, path: "scripts/bootstrap_ansible.sh"
    d.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.memory = 8192 
      v.cpus = 6
    end
  end
  config.vm.define "dlowkeyvmaf" do |d|
    d.vm.hostname = "dlowkeyvmaa"
    d.vm.network "public_network"
    d.vm.provision :shell, path: "scripts/bootstrap_ansible.sh"
    d.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.memory = 8192 
      v.cpus = 6
    end
  end
   if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
    config.vbguest.no_install = true
    config.vbguest.no_remote = true
  end
end
